自助考勤文档

功能描述：
3.开始考勤：
上课开始前或者开始后，教师打开考勤功能，此时学生可以开始自助考勤或者自助请假。
开始考勤后，学生可以上传相应学号和假条照片给系统。

用例：开启考勤
1.目标：
本用例允许教师发起考勤
2.事件流
    2.1基本流程
    当教师希望对学生进行考勤，点击自助考勤按钮时，本用例开始执行。
    （1）系统请求教师选择课头id。
    （2）教师输入课头id后，系统为本次考勤开启时间窗口。
    （3）系统将该教师，和本次需要参与考勤的学生加入考勤队列。多
    （4）系统增加本次的考勤次序记录。
    （5）系统初始化本次考勤的详细记录表。
    （6）系统通知所有需参与考勤的学生参与考勤。
    2.2可选流程
    （1）输入信息不存在
    再主流程中，如果系统没有教师输入的课头id，学生信息，修改的考勤次序号，系统将显示错误信息，要求教师重新输入。
    （2）发起考勤时间早于允许时间
    教师在上课时间5分钟前发起考勤，不允许该教师发起考勤，系统提示错误信息，用例结束。
    （3）A，B教师同时在一个节次考勤相同班级 error
    A教师已经成功开启考勤后，B教师再次对该班级发起考勤，不允许B教师发起考勤，系统提示错误信息，用例结束。
    （4）第一节次时间窗口延续到第二节次
    当第一节次的时间窗口延续到第二节时，第二节次在次对相同班级发起考勤，终止第一时间窗口，开启第二时间窗口。
3.特殊需求
事件窗口的长度有配置文件决定。
系统时间应与标准时间一致。
4.前提条件
用例开始之前，需设置配置文件。
5.后置条件
如果用例执行成功，系统在时间窗口内保持接收学生提交的考勤信息。


用例：参与考勤
1.目标
    本用例允许学生提交自己的特征信息。
2.事件流
    2.1基本流程
    当教师发起考勤后，时间窗口结束前，学生希望提交考勤信息时，本用例开始执行。
    （1）系统获取学生的学号。
    （2）系统请求学生提供特征信息。
    （3）学生输入有关信息后，系统获取当前时间。
    （4）系统显示新生成的考勤信息。
    （5）学生确认后，系统提交该考勤记录。
     2.2可选流
    （1）该学生未在考勤队列中
    在主流程中，如果考勤队列中没有该学生的信息，系统提示错误信息，用例结束。
    （2）不存在考勤窗口
    在主流程中，如果考勤窗口，未开启，或已关闭，系统提示错误信息，用例结束。
    （3）提交考勤信息失败
    在主流程中，如果学生提交考勤信息失败，系统提示错误信息，请求学生重新提交。
3.特殊需求
系统时间应与标准时间一致。
4.前提条件
用例开始前，学生需要在系统登录成功。
5.后置条件
无。

用例：上课抽点
1.目标
    本例允许教师抽点学生考勤。
2.事件流
    2.1基本流程
    在课堂上，教师希望抽查学生的到勤情况时，本用例开始执行。
    （1）系统通过教师的id，在考勤队列中查找该教师当前考勤的所有学生。
    （2）系统请求教师选择抽点比例，（记录抽点发生时间）。
    （3）教师输入抽点比例后，系统按照比例随机选取学生，做为抽点学生。
    （4）系统为选取出的学生在该节课的详细记录中增加判定结果为“早退”的详细记录。
    （5）系统通知抽点的学生参加考勤。
    2.2可选流程
    （1）教师不在考勤队列
    在主流程中，如果系统中的考勤队列中没有该教师，系统将显示错误信息，用例结束。
3.特殊需求
    无。
4.前提条件
    用例开始前，该教师应当在考勤队列中。
5.后置条件
    如果用例执行成功，该考勤详细记录增加，否则，系统状态不变。

需求分析：
教师发起考勤后，系统自动记录学生的考勤情况。

详细设计：
实体类：SeqInfo,DetailInfo,SumInfo,TecInfo,StuInfo,CourseInfo,IniInfo，CheckInInfo抽象类：RWFile,
边界类：TecStartCheckInForm,StuJoinCheckInForm,
控制类：TecStartCheckInControl,StuJoinCheckInControl,TimeWindows,CheckInArray,TecSampleCheckInControl

头脑风暴时间：
TimeWindows:
该类执行时间计时器的控制，额决定将是否开启，是否关闭，的判定交由TecStartCheckInControl类

checkInArry:
原作用为参与考勤的实体对象信息，但是因为只能维护一个计时器的前提，队列作用是一个全局变量，
学长的例子额，不理解该队列必须存在的作用。
所以，只作为当前参与考勤对象的集合即可。
我理解的规则：是为了解决同一节次的互不影响的教师考勤，但是样例完全不是这样用的。

detail转sum算法，及detail表的记录规则

detail表在记录自助考勤时，
教师发起自助考勤时，在detail表中为所有学生初始化状态为“缺勤”
然后接收学生提交的信息，
若本次考勤结束前教师发起抽查，为抽查的学生提交状态“早退”
然后接收学生提交的信息。
到时间窗口关闭时，结束接收信息。
（虽然不知道是以什么形式的数据作为接收，就当是手动输入了）
即如下的规则：
1.提交就接收
2.待查学生初始化
sum接收的数据转化规则：
step1:
每行的result判定规则及优先级
优先级|规则
1     |CheckinType = man : result = default
2     |CheckinType = auto ,IsSucc = flase : result = "qq"
3     |CheckinType = auto ,IsSucc = true , CheckinTime - tectime < 5min : result = "in/cd"
4     |抽查部分的学生，同3，将tectime换为sampletime.(超时迟到，与抽查的区分判定？时间上会重合)（就当被抽查的部分人有标识吧）
step2:
优先级|规则
0     |手工添加的状态为真
1     |判定到勤即停止对该学生的“自动状态”更新
2     |以最后一次的提交判定状态为准
将转化后的数据写入sum表
end

时间窗口开启即队列更新规则：队列更新，时间计时器重启，节次变化，队列更新。
1.判定节次
2.该节次内不存在时间窗口，更新队列，开启计时器。
3.该节次内存在时间窗口，class不冲突，进入队列。
4.该节次内存在时间窗口，class冲突，不能进入队列。
5.不同节次，更新队列，关闭现有计时器，开启新计时器。
